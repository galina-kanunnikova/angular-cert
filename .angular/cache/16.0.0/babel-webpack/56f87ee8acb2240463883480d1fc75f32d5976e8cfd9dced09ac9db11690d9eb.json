{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction QuestionComponent_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function QuestionComponent_button_2_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const answer_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.buttonClicked(answer_r2));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const answer_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r0.getButtonClass(answer_r2));\n    i0.ɵɵproperty(\"innerHTML\", answer_r2, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction QuestionComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function QuestionComponent_ng_container_3_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.changeQuestionClicked());\n    });\n    i0.ɵɵtext(2, \" Change Question \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nclass QuestionComponent {\n  constructor() {\n    this.questions = [];\n    this.change = new EventEmitter();\n    this.changeQuestion = new EventEmitter();\n  }\n  getButtonClass(answer) {\n    if (!this.userAnswer) {\n      if (this.currentSelection == answer) return \"tertiary\";\n    } else {\n      if (this.userAnswer == this.correctAnswer && this.userAnswer == answer) return \"tertiary\";\n      if (answer == this.correctAnswer) return \"secondary\";\n    }\n    return \"primary\";\n  }\n  buttonClicked(answer) {\n    this.currentSelection = answer;\n    this.change.emit(answer);\n  }\n  changeQuestionClicked() {\n    this.changeQuestion.emit();\n  }\n}\nQuestionComponent.ɵfac = function QuestionComponent_Factory(t) {\n  return new (t || QuestionComponent)();\n};\nQuestionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuestionComponent,\n  selectors: [[\"app-question\"]],\n  inputs: {\n    question: \"question\",\n    questions: \"questions\",\n    hideButtons: \"hideButtons\",\n    correctAnswer: \"correctAnswer\",\n    userAnswer: \"userAnswer\"\n  },\n  outputs: {\n    change: \"change\",\n    changeQuestion: \"changeQuestion\"\n  },\n  decls: 4,\n  vars: 3,\n  consts: [[3, \"innerHTML\"], [3, \"class\", \"innerHTML\", \"click\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [3, \"innerHTML\", \"click\"], [3, \"click\"]],\n  template: function QuestionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"p\", 0);\n      i0.ɵɵelementStart(1, \"div\");\n      i0.ɵɵtemplate(2, QuestionComponent_button_2_Template, 1, 3, \"button\", 1);\n      i0.ɵɵtemplate(3, QuestionComponent_ng_container_3_Template, 3, 0, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"innerHTML\", ctx.question.question, i0.ɵɵsanitizeHtml);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.question.all_answers);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hideButtons === false);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { QuestionComponent };","map":{"version":3,"mappings":"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","names":["EventEmitter","i0","ɵɵelementStart","ɵɵlistener","QuestionComponent_button_2_Template_button_click_0_listener","restoredCtx","ɵɵrestoreView","_r4","answer_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","buttonClicked","ɵɵelementEnd","ɵɵclassMap","ctx_r0","getButtonClass","ɵɵproperty","ɵɵsanitizeHtml","ɵɵelementContainerStart","QuestionComponent_ng_container_3_Template_button_click_1_listener","_r6","ctx_r5","changeQuestionClicked","ɵɵtext","ɵɵelementContainerEnd","QuestionComponent","constructor","questions","change","changeQuestion","answer","userAnswer","currentSelection","correctAnswer","emit","selectors","inputs","question","hideButtons","outputs","decls","vars","consts","template","QuestionComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","QuestionComponent_button_2_Template","QuestionComponent_ng_container_3_Template","ɵɵadvance","all_answers"],"sourceRoot":"","sources":["/Users/gkanunnikova/angular3/angular-cert/src/app/question/question.component.ts","/Users/gkanunnikova/angular3/angular-cert/src/app/question/question.component.html"],"sourcesContent":["import {ChangeDetectionStrategy, Component, EventEmitter, Input, Output} from '@angular/core';\nimport {Question} from '../data.models';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.css']\n})\nexport class QuestionComponent {\n  @Input({required: true})\n  question!: Question;\n  @Input()\n    questions?: Question[] | null = [];\n  @Input()\n   hideButtons?: boolean;\n\n  @Input()\n  correctAnswer?: string;\n  @Input()\n  userAnswer?: string;\n\n  getButtonClass(answer: string): string {\n    if (! this.userAnswer) {\n        if (this.currentSelection == answer)\n          return \"tertiary\";\n    } else {\n      if (this.userAnswer == this.correctAnswer && this.userAnswer == answer)\n        return \"tertiary\";\n      if (answer == this.correctAnswer)\n        return \"secondary\";\n    }\n    return \"primary\";\n  }\n\n  @Output()\n  change = new EventEmitter<string>();\n  @Output()\n  changeQuestion = new EventEmitter();\n\n  currentSelection!: string;\n\n  buttonClicked(answer: string): void {\n    this.currentSelection = answer;\n    this.change.emit(answer);\n  }\n  changeQuestionClicked(): void {\n      this.changeQuestion.emit();\n  }\n}\n","<p [innerHTML]=\"question.question\"></p>\n<div>\n  <button (click)=\"buttonClicked(answer)\"\n          [class]=\"getButtonClass(answer)\"\n          *ngFor=\"let answer of question.all_answers\"\n          [innerHTML]=\"answer\">\n  </button>\n  <ng-container *ngIf=\"hideButtons === false\">\n    <button (click)=\"changeQuestionClicked()\">\n      Change Question\n    </button>\n  </ng-container>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
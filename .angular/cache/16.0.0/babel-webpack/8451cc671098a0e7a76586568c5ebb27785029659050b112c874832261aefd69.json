{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../quiz.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../quiz/quiz.component\";\nimport * as i5 from \"../autocomplete/autocomplete.component\";\nimport * as i6 from \"../category.pipe\";\nimport * as i7 from \"../subcategory.pipe\";\nfunction QuizMakerComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"app-autocomplete\", 2, 3);\n    i0.ɵɵpipe(3, \"subcategory\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"listData\", i0.ɵɵpipeBind2(3, 1, ctx_r1.categories$, ctx_r1.categorySelectedName));\n  }\n}\nfunction QuizMakerComponent_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r7.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_r7.name, \" \");\n  }\n}\nfunction QuizMakerComponent_ng_container_13_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const subcategory_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", subcategory_r10.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", subcategory_r10.name, \" \");\n  }\n}\nfunction QuizMakerComponent_ng_container_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"select\", 13, 14);\n    i0.ɵɵlistener(\"ngModelChange\", function QuizMakerComponent_ng_container_13_Template_select_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.subcategorySelected = $event);\n    });\n    i0.ɵɵelementStart(3, \"option\");\n    i0.ɵɵtext(4, \"Select subcategory\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, QuizMakerComponent_ng_container_13_option_5_Template, 2, 2, \"option\", 7);\n    i0.ɵɵpipe(6, \"async\");\n    i0.ɵɵpipe(7, \"subcategory\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.subcategorySelected);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(6, 2, i0.ɵɵpipeBind2(7, 4, ctx_r4.categories$, ctx_r4.categorySelectedName)));\n  }\n}\nclass QuizMakerComponent {\n  constructor(quizService) {\n    this.quizService = quizService;\n    this.categories$ = this.quizService.getAllCategories();\n    //console.log(quizService.getAllCategories())\n  }\n\n  checkCategory(catId) {\n    this.categories$.subscribe(res => {\n      let selectedcat = res.find(cat => cat.id === Number(catId));\n      this.categorySelectedName = selectedcat.name.split(\":\")[0].toLowerCase();\n    });\n  }\n  createQuiz(difficulty) {\n    var id = \"0\";\n    if (this.subcategorySelected) {\n      id = this.subcategorySelected;\n    } else {\n      id = this.categorySelected;\n    }\n    this.quizService.difficultySelected = difficulty;\n    this.quizService.categorySelected = id;\n    this.questions$ = this.quizService.createQuiz(id, difficulty);\n  }\n}\nQuizMakerComponent.ɵfac = function QuizMakerComponent_Factory(t) {\n  return new (t || QuizMakerComponent)(i0.ɵɵdirectiveInject(i1.QuizService));\n};\nQuizMakerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuizMakerComponent,\n  selectors: [[\"app-quiz-maker\"]],\n  decls: 29,\n  vars: 14,\n  consts: [[1, \"row\"], [1, \"col-sm-11\"], [3, \"listData\"], [\"autocomplete\", \"appAutocomplete\"], [4, \"ngIf\"], [\"id\", \"categorySelect\", 3, \"ngModel\", \"ngModelChange\"], [\"category\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"difficultySelect\"], [\"difficulty\", \"\"], [\"id\", \"createBtn\", 1, \"primary\", 3, \"click\"], [3, \"questions\"], [3, \"value\"], [\"id\", \"subcategorySelect\", 3, \"ngModel\", \"ngModelChange\"], [\"subcategory\", \"\"]],\n  template: function QuizMakerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r13 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"app-autocomplete\", 2, 3);\n      i0.ɵɵpipe(4, \"category\");\n      i0.ɵɵtemplate(5, QuizMakerComponent_ng_container_5_Template, 4, 4, \"ng-container\", 4);\n      i0.ɵɵelementStart(6, \"select\", 5, 6);\n      i0.ɵɵlistener(\"ngModelChange\", function QuizMakerComponent_Template_select_ngModelChange_6_listener($event) {\n        return ctx.categorySelected = $event;\n      })(\"ngModelChange\", function QuizMakerComponent_Template_select_ngModelChange_6_listener($event) {\n        return ctx.checkCategory($event);\n      });\n      i0.ɵɵelementStart(8, \"option\");\n      i0.ɵɵtext(9, \"Select category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, QuizMakerComponent_option_10_Template, 2, 2, \"option\", 7);\n      i0.ɵɵpipe(11, \"async\");\n      i0.ɵɵpipe(12, \"category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(13, QuizMakerComponent_ng_container_13_Template, 8, 7, \"ng-container\", 4);\n      i0.ɵɵelementStart(14, \"select\", 8, 9)(16, \"option\");\n      i0.ɵɵtext(17, \"Select difficulty\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"option\");\n      i0.ɵɵtext(19, \"Easy\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"option\");\n      i0.ɵɵtext(21, \"Medium\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"option\");\n      i0.ɵɵtext(23, \"Hard\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function QuizMakerComponent_Template_button_click_24_listener() {\n        i0.ɵɵrestoreView(_r13);\n        const _r5 = i0.ɵɵreference(15);\n        return i0.ɵɵresetView(ctx.createQuiz(_r5.value));\n      });\n      i0.ɵɵtext(25, \"Create\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(26, \"div\", 0);\n      i0.ɵɵelement(27, \"app-quiz\", 11);\n      i0.ɵɵpipe(28, \"async\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"listData\", i0.ɵɵpipeBind1(4, 6, ctx.categories$));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.categorySelectedName === \"entertainment\" || ctx.categorySelectedName === \"science\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.categorySelected);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(11, 8, i0.ɵɵpipeBind1(12, 10, ctx.categories$)));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.categorySelectedName === \"entertainment\" || ctx.categorySelectedName === \"science\");\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"questions\", i0.ɵɵpipeBind1(28, 12, ctx.questions$));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel, i4.QuizComponent, i5.AutocompleteComponent, i2.AsyncPipe, i6.CategoryPipe, i7.SubcategoryPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { QuizMakerComponent };","map":{"version":3,"mappings":"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","names":["i0","ɵɵelementContainerStart","ɵɵelement","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","ɵɵpipeBind2","ctx_r1","categories$","categorySelectedName","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","category_r7","id","ɵɵtextInterpolate1","name","subcategory_r10","ɵɵlistener","QuizMakerComponent_ng_container_13_Template_select_ngModelChange_1_listener","$event","ɵɵrestoreView","_r12","ctx_r11","ɵɵnextContext","ɵɵresetView","subcategorySelected","ɵɵtemplate","QuizMakerComponent_ng_container_13_option_5_Template","ctx_r4","ɵɵpipeBind1","QuizMakerComponent","constructor","quizService","getAllCategories","checkCategory","catId","subscribe","res","selectedcat","find","cat","Number","split","toLowerCase","createQuiz","difficulty","categorySelected","difficultySelected","questions$","ɵɵdirectiveInject","i1","QuizService","selectors","decls","vars","consts","template","QuizMakerComponent_Template","rf","ctx","QuizMakerComponent_ng_container_5_Template","QuizMakerComponent_Template_select_ngModelChange_6_listener","QuizMakerComponent_option_10_Template","QuizMakerComponent_ng_container_13_Template","QuizMakerComponent_Template_button_click_24_listener","_r13","_r5","ɵɵreference","value"],"sourceRoot":"","sources":["/Users/gkanunnikova/angular3/angular-cert/src/app/quiz-maker/quiz-maker.component.html","/Users/gkanunnikova/angular3/angular-cert/src/app/quiz-maker/quiz-maker.component.ts"],"sourcesContent":["<div class=\"row\">\r\n  <div class=\"col-sm-11\">\r\n\r\n    <app-autocomplete #autocomplete=\"appAutocomplete\"  [listData]=\"categories$ | category\">\r\n    </app-autocomplete>\r\n\r\n    <ng-container *ngIf=\"categorySelectedName === 'entertainment' || categorySelectedName === 'science'\">\r\n      <app-autocomplete #autocomplete=\"appAutocomplete\"  [listData]=\"categories$ | subcategory:categorySelectedName\">\r\n      </app-autocomplete>\r\n    </ng-container>\r\n    <!--\r\n    <select #categor id=\"categorySelec\" >\r\n      <option>Select category</option>\r\n      <option [value]=\"category.id\" *ngFor=\"let category of categories$ | async\">\r\n        {{category.name}}\r\n      </option>\r\n    </select>-->\r\n    <select #category id=\"categorySelect\" [(ngModel)]=\"categorySelected\" (ngModelChange)=\"checkCategory($event)\">\r\n      <option>Select category</option>\r\n      <option  [value]=\"category.id\"  *ngFor=\"let category of (categories$ | category) | async\">\r\n        {{category.name}}\r\n      </option>\r\n    </select>\r\n    <ng-container *ngIf=\"categorySelectedName === 'entertainment' || categorySelectedName === 'science'\">\r\n      <select #subcategory  [(ngModel)]=\"subcategorySelected\" id=\"subcategorySelect\">\r\n        <option>Select subcategory</option>\r\n        <option [value]=\"subcategory.id\" *ngFor=\"let subcategory of (categories$ | subcategory:categorySelectedName) | async\">\r\n          {{subcategory.name}}\r\n        </option>\r\n      </select>\r\n    </ng-container>\r\n    <select #difficulty id=\"difficultySelect\">\r\n      <option>Select difficulty</option>\r\n      <option>Easy</option>\r\n      <option>Medium</option>\r\n      <option>Hard</option>\r\n    </select>\r\n    <button class=\"primary\" id=\"createBtn\" (click)=\"createQuiz(difficulty.value)\">Create</button>\r\n  </div>\r\n\r\n</div>\r\n<div class=\"row\">\r\n   <app-quiz [questions]=\"questions$ | async\" ></app-quiz>\r\n</div>\r\n","import {Component} from '@angular/core';\r\nimport {Category, Difficulty, Question} from '../data.models';\r\nimport {Observable, map} from 'rxjs';\r\nimport {QuizService} from '../quiz.service';\r\n\r\n@Component({\r\n  selector: 'app-quiz-maker',\r\n  templateUrl: './quiz-maker.component.html',\r\n  styleUrls: ['./quiz-maker.component.css']\r\n})\r\nexport class QuizMakerComponent {\r\n\r\n  categorySelected: any;\r\n  subcategorySelected: any;\r\n  categorySelectedName: any;\r\n\r\n  categories$: Observable<Category[]>;\r\n  questions$!: Observable<Question[]>;\r\n\r\n  constructor(protected quizService: QuizService) {\r\n    this.categories$ = this.quizService.getAllCategories()\r\n    //console.log(quizService.getAllCategories())\r\n  }\r\n\r\n  checkCategory(catId: string): void {\r\n    this.categories$.subscribe(res => {\r\n       let selectedcat = res.find(cat => cat.id === Number(catId))\r\n       this.categorySelectedName = selectedcat!.name.split(\":\")[0].toLowerCase()\r\n       });\r\n    }\r\n\r\n  createQuiz(difficulty: string): void {\r\n   var id = \"0\"\r\n   if (this.subcategorySelected) {id = this.subcategorySelected}\r\n   else{\r\n   id = this.categorySelected\r\n   }\r\n   this.quizService.difficultySelected = difficulty\r\n   this.quizService.categorySelected = id\r\n   this.questions$ = this.quizService.createQuiz(id, difficulty as Difficulty);\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
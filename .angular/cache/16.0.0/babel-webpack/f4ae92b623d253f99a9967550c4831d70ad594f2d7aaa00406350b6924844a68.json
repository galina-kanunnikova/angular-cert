{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../quiz.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../quiz/quiz.component\";\nimport * as i5 from \"../autocomplete/autocomplete.component\";\nimport * as i6 from \"../category.pipe\";\nimport * as i7 from \"../subcategory.pipe\";\nfunction QuizMakerComponent_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r6.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_r6.name, \" \");\n  }\n}\nfunction QuizMakerComponent_ng_container_15_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const subcategory_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", subcategory_r9.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", subcategory_r9.name, \" \");\n  }\n}\nfunction QuizMakerComponent_ng_container_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"select\", 13, 14);\n    i0.ɵɵlistener(\"ngModelChange\", function QuizMakerComponent_ng_container_15_Template_select_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.subcategorySelected = $event);\n    });\n    i0.ɵɵelementStart(3, \"option\");\n    i0.ɵɵtext(4, \"Select subcategory\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, QuizMakerComponent_ng_container_15_option_5_Template, 2, 2, \"option\", 6);\n    i0.ɵɵpipe(6, \"async\");\n    i0.ɵɵpipe(7, \"subcategory\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.subcategorySelected);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(6, 2, i0.ɵɵpipeBind2(7, 4, ctx_r4.categories$, ctx_r4.categorySelectedName)));\n  }\n}\nclass QuizMakerComponent {\n  constructor(quizService) {\n    this.quizService = quizService;\n    this.categories$ = this.quizService.getAllCategories();\n    //console.log(quizService.getAllCategories())\n  }\n\n  checkCategory(catId) {\n    this.categories$.subscribe(res => {\n      let selectedcat = res.find(cat => cat.id === Number(catId));\n      this.categorySelectedName = selectedcat.name.split(\":\")[0].toLowerCase();\n    });\n  }\n  createQuiz(difficulty) {\n    var id = \"0\";\n    if (this.subcategorySelected) {\n      id = this.subcategorySelected;\n    } else {\n      id = this.categorySelected;\n    }\n    this.quizService.difficultySelected = difficulty;\n    this.quizService.categorySelected = id;\n    this.questions$ = this.quizService.createQuiz(id, difficulty);\n  }\n}\nQuizMakerComponent.ɵfac = function QuizMakerComponent_Factory(t) {\n  return new (t || QuizMakerComponent)(i0.ɵɵdirectiveInject(i1.QuizService));\n};\nQuizMakerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuizMakerComponent,\n  selectors: [[\"app-quiz-maker\"]],\n  decls: 31,\n  vars: 17,\n  consts: [[1, \"row\"], [1, \"col-sm-11\"], [3, \"listData\"], [\"autocomplete\", \"appAutocomplete\"], [\"id\", \"categorySelect\", 3, \"ngModel\", \"ngModelChange\"], [\"category\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"id\", \"difficultySelect\"], [\"difficulty\", \"\"], [\"id\", \"createBtn\", 1, \"primary\", 3, \"click\"], [3, \"questions\"], [3, \"value\"], [\"id\", \"subcategorySelect\", 3, \"ngModel\", \"ngModelChange\"], [\"subcategory\", \"\"]],\n  template: function QuizMakerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r12 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"app-autocomplete\", 2, 3);\n      i0.ɵɵpipe(4, \"category\");\n      i0.ɵɵelement(5, \"app-autocomplete\", 2, 3);\n      i0.ɵɵpipe(7, \"subcategory\");\n      i0.ɵɵelementStart(8, \"select\", 4, 5);\n      i0.ɵɵlistener(\"ngModelChange\", function QuizMakerComponent_Template_select_ngModelChange_8_listener($event) {\n        return ctx.categorySelected = $event;\n      })(\"ngModelChange\", function QuizMakerComponent_Template_select_ngModelChange_8_listener($event) {\n        return ctx.checkCategory($event);\n      });\n      i0.ɵɵelementStart(10, \"option\");\n      i0.ɵɵtext(11, \"Select category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, QuizMakerComponent_option_12_Template, 2, 2, \"option\", 6);\n      i0.ɵɵpipe(13, \"async\");\n      i0.ɵɵpipe(14, \"category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(15, QuizMakerComponent_ng_container_15_Template, 8, 7, \"ng-container\", 7);\n      i0.ɵɵelementStart(16, \"select\", 8, 9)(18, \"option\");\n      i0.ɵɵtext(19, \"Select difficulty\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"option\");\n      i0.ɵɵtext(21, \"Easy\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"option\");\n      i0.ɵɵtext(23, \"Medium\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"option\");\n      i0.ɵɵtext(25, \"Hard\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function QuizMakerComponent_Template_button_click_26_listener() {\n        i0.ɵɵrestoreView(_r12);\n        const _r5 = i0.ɵɵreference(17);\n        return i0.ɵɵresetView(ctx.createQuiz(_r5.value));\n      });\n      i0.ɵɵtext(27, \"Create\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(28, \"div\", 0);\n      i0.ɵɵelement(29, \"app-quiz\", 11);\n      i0.ɵɵpipe(30, \"async\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"listData\", i0.ɵɵpipeBind1(4, 6, ctx.categories$));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"listData\", i0.ɵɵpipeBind2(7, 8, ctx.categories$, ctx.categorySelectedName));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.categorySelected);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(13, 11, i0.ɵɵpipeBind1(14, 13, ctx.categories$)));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.categorySelectedName === \"entertainment\" || ctx.categorySelectedName === \"science\");\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"questions\", i0.ɵɵpipeBind1(30, 15, ctx.questions$));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel, i4.QuizComponent, i5.AutocompleteComponent, i2.AsyncPipe, i6.CategoryPipe, i7.SubcategoryPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { QuizMakerComponent };","map":{"version":3,"mappings":";;;;;;;;;;IAkBMA,EAAA,CAAAC,cAAA,iBAA0F;IACxFD,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAFAH,EAAA,CAAAI,UAAA,UAAAC,WAAA,CAAAC,EAAA,CAAqB;IAC5BN,EAAA,CAAAO,SAAA,GACF;IADEP,EAAA,CAAAQ,kBAAA,MAAAH,WAAA,CAAAI,IAAA,MACF;;;;;IAKET,EAAA,CAAAC,cAAA,iBAAsH;IACpHD,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAFDH,EAAA,CAAAI,UAAA,UAAAM,cAAA,CAAAJ,EAAA,CAAwB;IAC9BN,EAAA,CAAAO,SAAA,GACF;IADEP,EAAA,CAAAQ,kBAAA,MAAAE,cAAA,CAAAD,IAAA,MACF;;;;;;IALJT,EAAA,CAAAW,uBAAA,GAAqG;IACnGX,EAAA,CAAAC,cAAA,qBAA+E;IAAzDD,EAAA,CAAAY,UAAA,2BAAAC,4EAAAC,MAAA;MAAAd,EAAA,CAAAe,aAAA,CAAAC,IAAA;MAAA,MAAAC,OAAA,GAAAjB,EAAA,CAAAkB,aAAA;MAAA,OAAAlB,EAAA,CAAAmB,WAAA,CAAAF,OAAA,CAAAG,mBAAA,GAAAN,MAAA;IAAA,EAAiC;IACrDd,EAAA,CAAAC,cAAA,aAAQ;IAAAD,EAAA,CAAAE,MAAA,yBAAkB;IAAAF,EAAA,CAAAG,YAAA,EAAS;IACnCH,EAAA,CAAAqB,UAAA,IAAAC,oDAAA,oBAES;;;IACXtB,EAAA,CAAAG,YAAA,EAAS;IACXH,EAAA,CAAAuB,qBAAA,EAAe;;;;IANSvB,EAAA,CAAAO,SAAA,GAAiC;IAAjCP,EAAA,CAAAI,UAAA,YAAAoB,MAAA,CAAAJ,mBAAA,CAAiC;IAEIpB,EAAA,CAAAO,SAAA,GAA2D;IAA3DP,EAAA,CAAAI,UAAA,YAAAJ,EAAA,CAAAyB,WAAA,OAAAzB,EAAA,CAAA0B,WAAA,OAAAF,MAAA,CAAAG,WAAA,EAAAH,MAAA,CAAAI,oBAAA,GAA2D;;;ACpB5H,MAKaC,kBAAkB;EAS7BC,YAAsBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAC/B,IAAI,CAACJ,WAAW,GAAG,IAAI,CAACI,WAAW,CAACC,gBAAgB,EAAE;IACtD;EACF;;EAEAC,aAAaA,CAACC,KAAa;IACzB,IAAI,CAACP,WAAW,CAACQ,SAAS,CAACC,GAAG,IAAG;MAC9B,IAAIC,WAAW,GAAGD,GAAG,CAACE,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACjC,EAAE,KAAKkC,MAAM,CAACN,KAAK,CAAC,CAAC;MAC3D,IAAI,CAACN,oBAAoB,GAAGS,WAAY,CAAC5B,IAAI,CAACgC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE;IACzE,CAAC,CAAC;EACL;EAEFC,UAAUA,CAACC,UAAkB;IAC5B,IAAItC,EAAE,GAAG,GAAG;IACZ,IAAI,IAAI,CAACc,mBAAmB,EAAE;MAACd,EAAE,GAAG,IAAI,CAACc,mBAAmB;KAAC,MACzD;MACJd,EAAE,GAAG,IAAI,CAACuC,gBAAgB;;IAE1B,IAAI,CAACd,WAAW,CAACe,kBAAkB,GAAGF,UAAU;IAChD,IAAI,CAACb,WAAW,CAACc,gBAAgB,GAAGvC,EAAE;IACtC,IAAI,CAACyC,UAAU,GAAG,IAAI,CAAChB,WAAW,CAACY,UAAU,CAACrC,EAAE,EAAEsC,UAAwB,CAAC;EAC5E;;AA9BWf,kBAAkB;mBAAlBA,kBAAkB,EAAA7B,EAAA,CAAAgD,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAlBrB,kBAAkB;QAAlBA,kBAAkB;EAAAsB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;MDV/BzD,EAAA,CAAAC,cAAA,aAAiB;MAGbD,EAAA,CAAA2D,SAAA,6BACmB;;MAEjB3D,EAAA,CAAA2D,SAAA,6BACmB;;MASrB3D,EAAA,CAAAC,cAAA,mBAA6G;MAAvED,EAAA,CAAAY,UAAA,2BAAAgD,4DAAA9C,MAAA;QAAA,OAAA4C,GAAA,CAAAb,gBAAA,GAAA/B,MAAA;MAAA,EAA8B,2BAAA8C,4DAAA9C,MAAA;QAAA,OAAkB4C,GAAA,CAAAzB,aAAA,CAAAnB,MAAA,CAAqB;MAAA,EAAvC;MAClEd,EAAA,CAAAC,cAAA,cAAQ;MAAAD,EAAA,CAAAE,MAAA,uBAAe;MAAAF,EAAA,CAAAG,YAAA,EAAS;MAChCH,EAAA,CAAAqB,UAAA,KAAAwC,qCAAA,oBAES;;;MACX7D,EAAA,CAAAG,YAAA,EAAS;MACTH,EAAA,CAAAqB,UAAA,KAAAyC,2CAAA,0BAOe;MACf9D,EAAA,CAAAC,cAAA,oBAA0C;MAChCD,EAAA,CAAAE,MAAA,yBAAiB;MAAAF,EAAA,CAAAG,YAAA,EAAS;MAClCH,EAAA,CAAAC,cAAA,cAAQ;MAAAD,EAAA,CAAAE,MAAA,YAAI;MAAAF,EAAA,CAAAG,YAAA,EAAS;MACrBH,EAAA,CAAAC,cAAA,cAAQ;MAAAD,EAAA,CAAAE,MAAA,cAAM;MAAAF,EAAA,CAAAG,YAAA,EAAS;MACvBH,EAAA,CAAAC,cAAA,cAAQ;MAAAD,EAAA,CAAAE,MAAA,YAAI;MAAAF,EAAA,CAAAG,YAAA,EAAS;MAEvBH,EAAA,CAAAC,cAAA,kBAA8E;MAAvCD,EAAA,CAAAY,UAAA,mBAAAmD,qDAAA;QAAA/D,EAAA,CAAAe,aAAA,CAAAiD,IAAA;QAAA,MAAAC,GAAA,GAAAjE,EAAA,CAAAkE,WAAA;QAAA,OAASlE,EAAA,CAAAmB,WAAA,CAAAuC,GAAA,CAAAf,UAAA,CAAAsB,GAAA,CAAAE,KAAA,CAA4B;MAAA,EAAC;MAACnE,EAAA,CAAAE,MAAA,cAAM;MAAAF,EAAA,CAAAG,YAAA,EAAS;MAIjGH,EAAA,CAAAC,cAAA,cAAiB;MACdD,EAAA,CAAA2D,SAAA,oBAAuD;;MAC1D3D,EAAA,CAAAG,YAAA,EAAM;;;MAvCiDH,EAAA,CAAAO,SAAA,GAAmC;MAAnCP,EAAA,CAAAI,UAAA,aAAAJ,EAAA,CAAAyB,WAAA,OAAAiC,GAAA,CAAA/B,WAAA,EAAmC;MAGjC3B,EAAA,CAAAO,SAAA,GAA2D;MAA3DP,EAAA,CAAAI,UAAA,aAAAJ,EAAA,CAAA0B,WAAA,OAAAgC,GAAA,CAAA/B,WAAA,EAAA+B,GAAA,CAAA9B,oBAAA,EAA2D;MAU1E5B,EAAA,CAAAO,SAAA,GAA8B;MAA9BP,EAAA,CAAAI,UAAA,YAAAsD,GAAA,CAAAb,gBAAA,CAA8B;MAEb7C,EAAA,CAAAO,SAAA,GAAmC;MAAnCP,EAAA,CAAAI,UAAA,YAAAJ,EAAA,CAAAyB,WAAA,SAAAzB,EAAA,CAAAyB,WAAA,SAAAiC,GAAA,CAAA/B,WAAA,GAAmC;MAI3E3B,EAAA,CAAAO,SAAA,GAAoF;MAApFP,EAAA,CAAAI,UAAA,SAAAsD,GAAA,CAAA9B,oBAAA,wBAAA8B,GAAA,CAAA9B,oBAAA,eAAoF;MAmB1F5B,EAAA,CAAAO,SAAA,IAAgC;MAAhCP,EAAA,CAAAI,UAAA,cAAAJ,EAAA,CAAAyB,WAAA,SAAAiC,GAAA,CAAAX,UAAA,EAAgC;;;;;;SC/BhClB,kBAAkB","names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","category_r6","id","ɵɵadvance","ɵɵtextInterpolate1","name","subcategory_r9","ɵɵelementContainerStart","ɵɵlistener","QuizMakerComponent_ng_container_15_Template_select_ngModelChange_1_listener","$event","ɵɵrestoreView","_r11","ctx_r10","ɵɵnextContext","ɵɵresetView","subcategorySelected","ɵɵtemplate","QuizMakerComponent_ng_container_15_option_5_Template","ɵɵelementContainerEnd","ctx_r4","ɵɵpipeBind1","ɵɵpipeBind2","categories$","categorySelectedName","QuizMakerComponent","constructor","quizService","getAllCategories","checkCategory","catId","subscribe","res","selectedcat","find","cat","Number","split","toLowerCase","createQuiz","difficulty","categorySelected","difficultySelected","questions$","ɵɵdirectiveInject","i1","QuizService","selectors","decls","vars","consts","template","QuizMakerComponent_Template","rf","ctx","ɵɵelement","QuizMakerComponent_Template_select_ngModelChange_8_listener","QuizMakerComponent_option_12_Template","QuizMakerComponent_ng_container_15_Template","QuizMakerComponent_Template_button_click_26_listener","_r12","_r5","ɵɵreference","value"],"sourceRoot":"","sources":["/Users/gkanunnikova/angular3/angular-cert/src/app/quiz-maker/quiz-maker.component.html","/Users/gkanunnikova/angular3/angular-cert/src/app/quiz-maker/quiz-maker.component.ts"],"sourcesContent":["<div class=\"row\">\r\n  <div class=\"col-sm-11\">\r\n\r\n    <app-autocomplete #autocomplete=\"appAutocomplete\"  [listData]=\"categories$ | category\">\r\n    </app-autocomplete>\r\n\r\n      <app-autocomplete #autocomplete=\"appAutocomplete\"  [listData]=\"categories$ | subcategory:categorySelectedName\">\r\n      </app-autocomplete>\r\n\r\n    <!--\r\n    <select #categor id=\"categorySelec\" >\r\n      <option>Select category</option>\r\n      <option [value]=\"category.id\" *ngFor=\"let category of categories$ | async\">\r\n        {{category.name}}\r\n      </option>\r\n    </select>-->\r\n    <select #category id=\"categorySelect\" [(ngModel)]=\"categorySelected\" (ngModelChange)=\"checkCategory($event)\">\r\n      <option>Select category</option>\r\n      <option  [value]=\"category.id\"  *ngFor=\"let category of (categories$ | category) | async\">\r\n        {{category.name}}\r\n      </option>\r\n    </select>\r\n    <ng-container *ngIf=\"categorySelectedName === 'entertainment' || categorySelectedName === 'science'\">\r\n      <select #subcategory  [(ngModel)]=\"subcategorySelected\" id=\"subcategorySelect\">\r\n        <option>Select subcategory</option>\r\n        <option [value]=\"subcategory.id\" *ngFor=\"let subcategory of (categories$ | subcategory:categorySelectedName) | async\">\r\n          {{subcategory.name}}\r\n        </option>\r\n      </select>\r\n    </ng-container>\r\n    <select #difficulty id=\"difficultySelect\">\r\n      <option>Select difficulty</option>\r\n      <option>Easy</option>\r\n      <option>Medium</option>\r\n      <option>Hard</option>\r\n    </select>\r\n    <button class=\"primary\" id=\"createBtn\" (click)=\"createQuiz(difficulty.value)\">Create</button>\r\n  </div>\r\n\r\n</div>\r\n<div class=\"row\">\r\n   <app-quiz [questions]=\"questions$ | async\" ></app-quiz>\r\n</div>\r\n","import {Component} from '@angular/core';\r\nimport {Category, Difficulty, Question} from '../data.models';\r\nimport {Observable, map} from 'rxjs';\r\nimport {QuizService} from '../quiz.service';\r\n\r\n@Component({\r\n  selector: 'app-quiz-maker',\r\n  templateUrl: './quiz-maker.component.html',\r\n  styleUrls: ['./quiz-maker.component.css']\r\n})\r\nexport class QuizMakerComponent {\r\n\r\n  categorySelected: any;\r\n  subcategorySelected: any;\r\n  categorySelectedName: any;\r\n\r\n  categories$: Observable<Category[]>;\r\n  questions$!: Observable<Question[]>;\r\n\r\n  constructor(protected quizService: QuizService) {\r\n    this.categories$ = this.quizService.getAllCategories()\r\n    //console.log(quizService.getAllCategories())\r\n  }\r\n\r\n  checkCategory(catId: string): void {\r\n    this.categories$.subscribe(res => {\r\n       let selectedcat = res.find(cat => cat.id === Number(catId))\r\n       this.categorySelectedName = selectedcat!.name.split(\":\")[0].toLowerCase()\r\n       });\r\n    }\r\n\r\n  createQuiz(difficulty: string): void {\r\n   var id = \"0\"\r\n   if (this.subcategorySelected) {id = this.subcategorySelected}\r\n   else{\r\n   id = this.categorySelected\r\n   }\r\n   this.quizService.difficultySelected = difficulty\r\n   this.quizService.categorySelected = id\r\n   this.questions$ = this.quizService.createQuiz(id, difficulty as Difficulty);\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
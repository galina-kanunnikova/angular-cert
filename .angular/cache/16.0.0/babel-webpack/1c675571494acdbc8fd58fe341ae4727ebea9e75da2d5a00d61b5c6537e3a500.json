{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../quiz.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../quiz/quiz.component\";\nimport * as i5 from \"../autocomplete/autocomplete.component\";\nimport * as i6 from \"../category.pipe\";\nimport * as i7 from \"../subcategory.pipe\";\nfunction QuizMakerComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"app-autocomplete\", 2);\n    i0.ɵɵlistener(\"selectedOptionEvent\", function QuizMakerComponent_ng_container_4_Template_app_autocomplete_selectedOptionEvent_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.subcategoryOptionSelected($event));\n    });\n    i0.ɵɵpipe(2, \"subcategory\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"placeholder\", \"Select subcategory\")(\"listData\", i0.ɵɵpipeBind2(2, 2, ctx_r0.categories$, ctx_r0.categorySelectedName));\n  }\n}\nclass QuizMakerComponent {\n  constructor(quizService) {\n    this.quizService = quizService;\n    this.categories$ = this.quizService.getAllCategories();\n    //console.log(quizService.getAllCategories())\n  }\n\n  checkCategory(catId) {\n    this.categories$.subscribe(res => {\n      let selectedcat = res.find(cat => cat.id === Number(catId));\n      this.categorySelectedName = selectedcat.name.split(\":\")[0].toLowerCase();\n    });\n  }\n  categoryOptionSelected(id) {\n    console.log(\"categoryOptionSelected \" + id);\n    this.categorySelected = id;\n    this.checkCategory(id);\n    this.subcategorySelected = null;\n  }\n  subcategoryOptionSelected(id) {\n    this.subcategorySelected = id;\n    this.categorySelected = null;\n  }\n  createQuiz(difficulty) {\n    var id = \"0\";\n    if (this.subcategorySelected) {\n      id = this.subcategorySelected;\n    } else {\n      id = this.categorySelected;\n    }\n    this.quizService.difficultySelected = difficulty;\n    this.quizService.categorySelected = id;\n    this.questions$ = this.quizService.createQuiz(id, difficulty);\n  }\n}\nQuizMakerComponent.ɵfac = function QuizMakerComponent_Factory(t) {\n  return new (t || QuizMakerComponent)(i0.ɵɵdirectiveInject(i1.QuizService));\n};\nQuizMakerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuizMakerComponent,\n  selectors: [[\"app-quiz-maker\"]],\n  decls: 20,\n  vars: 8,\n  consts: [[1, \"row\"], [1, \"col-sm-11\"], [3, \"placeholder\", \"listData\", \"selectedOptionEvent\"], [4, \"ngIf\"], [\"id\", \"difficultySelect\"], [\"difficulty\", \"\"], [\"id\", \"createBtn\", 1, \"primary\", 3, \"click\"], [3, \"questions\"]],\n  template: function QuizMakerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r4 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"app-autocomplete\", 2);\n      i0.ɵɵlistener(\"selectedOptionEvent\", function QuizMakerComponent_Template_app_autocomplete_selectedOptionEvent_2_listener($event) {\n        return ctx.categoryOptionSelected($event);\n      });\n      i0.ɵɵpipe(3, \"category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, QuizMakerComponent_ng_container_4_Template, 3, 5, \"ng-container\", 3);\n      i0.ɵɵelementStart(5, \"select\", 4, 5)(7, \"option\");\n      i0.ɵɵtext(8, \"Select difficulty\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"option\");\n      i0.ɵɵtext(10, \"Easy\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"option\");\n      i0.ɵɵtext(12, \"Medium\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"option\");\n      i0.ɵɵtext(14, \"Hard\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function QuizMakerComponent_Template_button_click_15_listener() {\n        i0.ɵɵrestoreView(_r4);\n        const _r1 = i0.ɵɵreference(6);\n        return i0.ɵɵresetView(ctx.createQuiz(_r1.value));\n      });\n      i0.ɵɵtext(16, \"Create\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"div\", 0);\n      i0.ɵɵelement(18, \"app-quiz\", 7);\n      i0.ɵɵpipe(19, \"async\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"placeholder\", \"Select category\")(\"listData\", i0.ɵɵpipeBind1(3, 4, ctx.categories$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.categorySelectedName === \"entertainment\" || ctx.categorySelectedName === \"science\");\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"questions\", i0.ɵɵpipeBind1(19, 6, ctx.questions$));\n    }\n  },\n  dependencies: [i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i4.QuizComponent, i5.AutocompleteComponent, i2.AsyncPipe, i6.CategoryPipe, i7.SubcategoryPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { QuizMakerComponent };","map":{"version":3,"mappings":";;;;;;;;;;;IAMIA,EAAA,CAAAC,uBAAA,GAAqG;IACnGD,EAAA,CAAAE,cAAA,0BAA6K;IAAtHF,EAAA,CAAAG,UAAA,iCAAAC,2FAAAC,MAAA;MAAAL,EAAA,CAAAM,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAR,EAAA,CAAAS,aAAA;MAAA,OAAuBT,EAAA,CAAAU,WAAA,CAAAF,MAAA,CAAAG,yBAAA,CAAAN,MAAA,CAAiC;IAAA,EAAC;;IAChHL,EAAA,CAAAY,YAAA,EAAmB;IACrBZ,EAAA,CAAAa,qBAAA,EAAe;;;;IAFKb,EAAA,CAAAc,SAAA,GAAoC;IAApCd,EAAA,CAAAe,UAAA,qCAAoC,aAAAf,EAAA,CAAAgB,WAAA,OAAAC,MAAA,CAAAC,WAAA,EAAAD,MAAA,CAAAE,oBAAA;;;ACF5D,MAKaC,kBAAkB;EAS7BC,YAAsBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAC/B,IAAI,CAACJ,WAAW,GAAG,IAAI,CAACI,WAAW,CAACC,gBAAgB,EAAE;IACtD;EACF;;EAEAC,aAAaA,CAACC,KAAa;IACzB,IAAI,CAACP,WAAW,CAACQ,SAAS,CAACC,GAAG,IAAG;MAC9B,IAAIC,WAAW,GAAGD,GAAG,CAACE,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKC,MAAM,CAACP,KAAK,CAAC,CAAC;MAC3D,IAAI,CAACN,oBAAoB,GAAGS,WAAY,CAACK,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE;IACzE,CAAC,CAAC;EACL;EAEFC,sBAAsBA,CAACL,EAAU;IAC7BM,OAAO,CAACC,GAAG,CAAC,yBAAyB,GAAGP,EAAE,CAAC;IAC3C,IAAI,CAACQ,gBAAgB,GAAGR,EAAE;IAC1B,IAAI,CAACP,aAAa,CAACO,EAAE,CAAC;IACtB,IAAI,CAACS,mBAAmB,GAAG,IAAI;EACnC;EAEA7B,yBAAyBA,CAACoB,EAAU;IAC9B,IAAI,CAACS,mBAAmB,GAAGT,EAAE;IAC7B,IAAI,CAACQ,gBAAgB,GAAG,IAAI;EAChC;EAEFE,UAAUA,CAACC,UAAkB;IAC5B,IAAIX,EAAE,GAAG,GAAG;IACZ,IAAI,IAAI,CAACS,mBAAmB,EAAE;MAACT,EAAE,GAAG,IAAI,CAACS,mBAAmB;KAAC,MACzD;MACJT,EAAE,GAAG,IAAI,CAACQ,gBAAgB;;IAE1B,IAAI,CAACjB,WAAW,CAACqB,kBAAkB,GAAGD,UAAU;IAChD,IAAI,CAACpB,WAAW,CAACiB,gBAAgB,GAAGR,EAAE;IACtC,IAAI,CAACa,UAAU,GAAG,IAAI,CAACtB,WAAW,CAACmB,UAAU,CAACV,EAAE,EAAEW,UAAwB,CAAC;EAC5E;;AA1CWtB,kBAAkB;mBAAlBA,kBAAkB,EAAApB,EAAA,CAAA6C,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAlB3B,kBAAkB;QAAlBA,kBAAkB;EAAA4B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;MDV/BtD,EAAA,CAAAE,cAAA,aAAiB;MAGuCF,EAAA,CAAAG,UAAA,iCAAAqD,4EAAAnD,MAAA;QAAA,OAAuBkD,GAAA,CAAAnB,sBAAA,CAAA/B,MAAA,CAA8B;MAAA,EAAC;;MAC1GL,EAAA,CAAAY,YAAA,EAAmB;MAEnBZ,EAAA,CAAAyD,UAAA,IAAAC,0CAAA,0BAGe;MAiBf1D,EAAA,CAAAE,cAAA,mBAA0C;MAChCF,EAAA,CAAA2D,MAAA,wBAAiB;MAAA3D,EAAA,CAAAY,YAAA,EAAS;MAClCZ,EAAA,CAAAE,cAAA,aAAQ;MAAAF,EAAA,CAAA2D,MAAA,YAAI;MAAA3D,EAAA,CAAAY,YAAA,EAAS;MACrBZ,EAAA,CAAAE,cAAA,cAAQ;MAAAF,EAAA,CAAA2D,MAAA,cAAM;MAAA3D,EAAA,CAAAY,YAAA,EAAS;MACvBZ,EAAA,CAAAE,cAAA,cAAQ;MAAAF,EAAA,CAAA2D,MAAA,YAAI;MAAA3D,EAAA,CAAAY,YAAA,EAAS;MAEvBZ,EAAA,CAAAE,cAAA,iBAA8E;MAAvCF,EAAA,CAAAG,UAAA,mBAAAyD,qDAAA;QAAA5D,EAAA,CAAAM,aAAA,CAAAuD,GAAA;QAAA,MAAAC,GAAA,GAAA9D,EAAA,CAAA+D,WAAA;QAAA,OAAS/D,EAAA,CAAAU,WAAA,CAAA6C,GAAA,CAAAd,UAAA,CAAAqB,GAAA,CAAAE,KAAA,CAA4B;MAAA,EAAC;MAAChE,EAAA,CAAA2D,MAAA,cAAM;MAAA3D,EAAA,CAAAY,YAAA,EAAS;MAIjGZ,EAAA,CAAAE,cAAA,cAAiB;MACdF,EAAA,CAAAiE,SAAA,mBAAuD;;MAC1DjE,EAAA,CAAAY,YAAA,EAAM;;;MAnCgBZ,EAAA,CAAAc,SAAA,GAAiC;MAAjCd,EAAA,CAAAe,UAAA,kCAAiC,aAAAf,EAAA,CAAAkE,WAAA,OAAAX,GAAA,CAAArC,WAAA;MAGpClB,EAAA,CAAAc,SAAA,GAAoF;MAApFd,EAAA,CAAAe,UAAA,SAAAwC,GAAA,CAAApC,oBAAA,wBAAAoC,GAAA,CAAApC,oBAAA,eAAoF;MA+B1FnB,EAAA,CAAAc,SAAA,IAAgC;MAAhCd,EAAA,CAAAe,UAAA,cAAAf,EAAA,CAAAkE,WAAA,QAAAX,GAAA,CAAAX,UAAA,EAAgC;;;;;;SC3BhCxB,kBAAkB","names":["i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵlistener","QuizMakerComponent_ng_container_4_Template_app_autocomplete_selectedOptionEvent_1_listener","$event","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","subcategoryOptionSelected","ɵɵelementEnd","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","ɵɵpipeBind2","ctx_r0","categories$","categorySelectedName","QuizMakerComponent","constructor","quizService","getAllCategories","checkCategory","catId","subscribe","res","selectedcat","find","cat","id","Number","name","split","toLowerCase","categoryOptionSelected","console","log","categorySelected","subcategorySelected","createQuiz","difficulty","difficultySelected","questions$","ɵɵdirectiveInject","i1","QuizService","selectors","decls","vars","consts","template","QuizMakerComponent_Template","rf","ctx","QuizMakerComponent_Template_app_autocomplete_selectedOptionEvent_2_listener","ɵɵtemplate","QuizMakerComponent_ng_container_4_Template","ɵɵtext","QuizMakerComponent_Template_button_click_15_listener","_r4","_r1","ɵɵreference","value","ɵɵelement","ɵɵpipeBind1"],"sourceRoot":"","sources":["/Users/gkanunnikova/angular3/angular-cert/src/app/quiz-maker/quiz-maker.component.html","/Users/gkanunnikova/angular3/angular-cert/src/app/quiz-maker/quiz-maker.component.ts"],"sourcesContent":["<div class=\"row\">\r\n  <div class=\"col-sm-11\">\r\n\r\n    <app-autocomplete [placeholder]=\"'Select category'\" (selectedOptionEvent)=\"categoryOptionSelected($event)\" [listData]=\"categories$ | category\">\r\n    </app-autocomplete>\r\n\r\n    <ng-container *ngIf=\"categorySelectedName === 'entertainment' || categorySelectedName === 'science'\">\r\n      <app-autocomplete [placeholder]=\"'Select subcategory'\" (selectedOptionEvent)=\"subcategoryOptionSelected($event)\" [listData]=\"categories$ | subcategory:categorySelectedName\">\r\n      </app-autocomplete>\r\n    </ng-container>\r\n    <!--\r\n    <select #category id=\"categorySelect\" [(ngModel)]=\"categorySelected\" (ngModelChange)=\"checkCategory($event)\">\r\n      <option>Select category</option>\r\n      <option  [value]=\"category.id\"  *ngFor=\"let category of (categories$ | category) | async\">\r\n        {{category.name}}\r\n      </option>\r\n    </select>\r\n    <ng-container *ngIf=\"categorySelectedName === 'entertainment' || categorySelectedName === 'science'\">\r\n      <select #subcategory  [(ngModel)]=\"subcategorySelected\" id=\"subcategorySelect\">\r\n        <option>Select subcategory</option>\r\n        <option [value]=\"subcategory.id\" *ngFor=\"let subcategory of (categories$ | subcategory:categorySelectedName) | async\">\r\n          {{subcategory.name}}\r\n        </option>\r\n      </select>\r\n    </ng-container>\r\n    -->\r\n    <select #difficulty id=\"difficultySelect\">\r\n      <option>Select difficulty</option>\r\n      <option>Easy</option>\r\n      <option>Medium</option>\r\n      <option>Hard</option>\r\n    </select>\r\n    <button class=\"primary\" id=\"createBtn\" (click)=\"createQuiz(difficulty.value)\">Create</button>\r\n  </div>\r\n\r\n</div>\r\n<div class=\"row\">\r\n   <app-quiz [questions]=\"questions$ | async\" ></app-quiz>\r\n</div>\r\n","import {Component} from '@angular/core';\r\nimport {Category, Difficulty, Question} from '../data.models';\r\nimport {Observable, map} from 'rxjs';\r\nimport {QuizService} from '../quiz.service';\r\n\r\n@Component({\r\n  selector: 'app-quiz-maker',\r\n  templateUrl: './quiz-maker.component.html',\r\n  styleUrls: ['./quiz-maker.component.css']\r\n})\r\nexport class QuizMakerComponent {\r\n\r\n  categorySelected: any;\r\n  subcategorySelected: any;\r\n  categorySelectedName: any;\r\n\r\n  categories$: Observable<Category[]>;\r\n  questions$!: Observable<Question[]>;\r\n\r\n  constructor(protected quizService: QuizService) {\r\n    this.categories$ = this.quizService.getAllCategories()\r\n    //console.log(quizService.getAllCategories())\r\n  }\r\n\r\n  checkCategory(catId: string): void {\r\n    this.categories$.subscribe(res => {\r\n       let selectedcat = res.find(cat => cat.id === Number(catId))\r\n       this.categorySelectedName = selectedcat!.name.split(\":\")[0].toLowerCase()\r\n       });\r\n    }\r\n\r\n  categoryOptionSelected(id: string): void {\r\n      console.log(\"categoryOptionSelected \" + id)\r\n      this.categorySelected = id;\r\n      this.checkCategory(id)\r\n      this.subcategorySelected = null\r\n  }\r\n\r\n  subcategoryOptionSelected(id: string): void {\r\n        this.subcategorySelected = id;\r\n        this.categorySelected = null\r\n    }\r\n\r\n  createQuiz(difficulty: string): void {\r\n   var id = \"0\"\r\n   if (this.subcategorySelected) {id = this.subcategorySelected}\r\n   else{\r\n   id = this.categorySelected\r\n   }\r\n   this.quizService.difficultySelected = difficulty\r\n   this.quizService.categorySelected = id\r\n   this.questions$ = this.quizService.createQuiz(id, difficulty as Difficulty);\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { map } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../bold.pipe\";\nfunction AutocompleteComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 2);\n    i0.ɵɵelement(1, \"button\", 3);\n    i0.ɵɵpipe(2, \"bold\");\n    i0.ɵɵelement(3, \"p\", 4);\n    i0.ɵɵpipe(4, \"bold\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const data_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind2(2, 2, data_r1.name, ctx_r0.control.value), i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind2(4, 5, data_r1.name, ctx_r0.control.value), i0.ɵɵsanitizeHtml);\n  }\n}\nclass AutocompleteComponent {\n  constructor() {\n    this.control = new FormControl();\n  }\n  ngOnInit() {\n    this.control.valueChanges.subscribe(x => {\n      console.log(' value changed');\n      console.log(x);\n      this.filteredData = this.listData.pipe(map(items => items.filter(item => item.name.toLowerCase().indexOf(x.toLowerCase()) > -1)));\n    });\n    this.filteredData?.subscribe(res => console.log(res));\n    this.listData?.subscribe(res => console.log(res));\n  }\n}\nAutocompleteComponent.ɵfac = function AutocompleteComponent_Factory(t) {\n  return new (t || AutocompleteComponent)();\n};\nAutocompleteComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AutocompleteComponent,\n  selectors: [[\"app-autocomplete\"]],\n  inputs: {\n    title: \"title\",\n    listData: \"listData\",\n    doesMatchSearch: \"doesMatchSearch\"\n  },\n  exportAs: [\"appAutocomplete\"],\n  decls: 3,\n  vars: 4,\n  consts: [[\"id\", \"myInput\", \"placeholder\", \"Text\", 3, \"formControl\"], [\"appAutocomplete\", \"\", 4, \"ngFor\", \"ngForOf\"], [\"appAutocomplete\", \"\"], [\"id\", \"catBtn\", 3, \"innerHTML\"], [2, \"color\", \"black\", \"margin-bottom\", \"10px\", 3, \"innerHTML\"]],\n  template: function AutocompleteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"input\", 0);\n      i0.ɵɵtemplate(1, AutocompleteComponent_ng_container_1_Template, 5, 8, \"ng-container\", 1);\n      i0.ɵɵpipe(2, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formControl\", ctx.control);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 2, ctx.filteredData));\n    }\n  },\n  dependencies: [i1.NgForOf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlDirective, i1.AsyncPipe, i3.BoldPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"],\n  changeDetection: 0\n});\nexport { AutocompleteComponent };","map":{"version":3,"mappings":"AAQA,SAAuCA,GAAG,QAAyB,MAAM;AACzE,SAASC,WAAW,QAAQ,gBAAgB;;;;;;;IAS5BC,EAAA,CAAAC,uBAAA,MAAwE;IACtED,EAAA,CAAAE,SAAA,gBAA4E;;IAC5EF,EAAA,CAAAE,SAAA,WAAiG;;IACnGF,EAAA,CAAAG,qBAAA,EAAe;;;;;IAFQH,EAAA,CAAAI,SAAA,GAA6C;IAA7CJ,EAAA,CAAAK,UAAA,cAAAL,EAAA,CAAAM,WAAA,OAAAC,OAAA,CAAAC,IAAA,EAAAC,MAAA,CAAAC,OAAA,CAAAC,KAAA,GAAAX,EAAA,CAAAY,cAAA,CAA6C;IACnBZ,EAAA,CAAAI,SAAA,GAA6C;IAA7CJ,EAAA,CAAAK,UAAA,cAAAL,EAAA,CAAAM,WAAA,OAAAC,OAAA,CAAAC,IAAA,EAAAC,MAAA,CAAAC,OAAA,CAAAC,KAAA,GAAAX,EAAA,CAAAY,cAAA,CAA6C;;;AAR9G,MAeaC,qBAAqB;EAflCC,YAAA;IAiBC,KAAAJ,OAAO,GAAG,IAAIX,WAAW,EAAE;;EAQ3BgB,QAAQA,CAAA;IACP,IAAI,CAACL,OAAO,CAACM,YAAY,CAACC,SAAS,CAACC,CAAC,IAAG;MACrCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC7BD,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MACd,IAAI,CAACG,YAAY,GAAI,IAAI,CAACC,QAAS,CAACC,IAAI,CACtCzB,GAAG,CAAC0B,KAAK,IAAIA,KAAK,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAAClB,IAAI,CAACmB,WAAW,EAAE,CAACC,OAAO,CAACV,CAAC,CAACS,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAC1F;IACJ,CAAC,CAAC;IAEF,IAAI,CAACN,YAAY,EAAEJ,SAAS,CAAEY,GAAG,IAC9BV,OAAO,CAACC,GAAG,CAACS,GAAG,CAAC,CAChB;IACH,IAAI,CAACP,QAAQ,EAAEL,SAAS,CAAEY,GAAG,IAC5BV,OAAO,CAACC,GAAG,CAACS,GAAG,CAAC,CAChB;EAGD;;AA3BWhB,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAiB,SAAA;EAAAC,MAAA;IAAAC,KAAA;IAAAV,QAAA;IAAAW,eAAA;EAAA;EAAAC,QAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAZlBxC,EAAA,CAAAE,SAAA,eAE0B;MAC1BF,EAAA,CAAA0C,UAAA,IAAAC,6CAAA,0BAGe;;;;MALR3C,EAAA,CAAAK,UAAA,gBAAAoC,GAAA,CAAA/B,OAAA,CAAuB;MAEiBV,EAAA,CAAAI,SAAA,GAAuB;MAAvBJ,EAAA,CAAAK,UAAA,YAAAL,EAAA,CAAA4C,WAAA,OAAAH,GAAA,CAAApB,YAAA,EAAuB;;;;;;;SASzER,qBAAqB","names":["map","FormControl","i0","ɵɵelementContainerStart","ɵɵelement","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","ɵɵpipeBind2","data_r1","name","ctx_r0","control","value","ɵɵsanitizeHtml","AutocompleteComponent","constructor","ngOnInit","valueChanges","subscribe","x","console","log","filteredData","listData","pipe","items","filter","item","toLowerCase","indexOf","res","selectors","inputs","title","doesMatchSearch","exportAs","decls","vars","consts","template","AutocompleteComponent_Template","rf","ctx","ɵɵtemplate","AutocompleteComponent_ng_container_1_Template","ɵɵpipeBind1"],"sourceRoot":"","sources":["/Users/gkanunnikova/angular3/angular-cert/src/app/autocomplete/autocomplete.component.ts"],"sourcesContent":["import {\n  Component,\n  Input,\n  OnInit,\n  TemplateRef,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { switchMap } from 'rxjs/operators';\nimport { merge, Observable, startWith, map, filter, flatMap } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport {QuizService} from '../quiz.service';\n\n@Component({\n  selector: 'app-autocomplete',\n  template: `\n                <input id=\"myInput\"\n                       [formControl]=\"control\"\n                       placeholder=\"Text\">\n                <ng-container appAutocomplete *ngFor=\"let data of filteredData | async\">\n                  <button id=\"catBtn\"  [innerHTML]=\"data.name | bold: control.value\"></button>\n                  <p style=\"color: black; margin-bottom: 10px;\"  [innerHTML]=\"data.name | bold: control.value\"></p>\n                </ng-container>\n              `,\n  styleUrls: ['./autocomplete.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'appAutocomplete'\n})\nexport class AutocompleteComponent implements OnInit{\n\n control = new FormControl();\n @Input() title?: string;\n @Input() listData?: Observable<any[]>;\n @Input() doesMatchSearch?: (item: any, search: string) => boolean;\n\n filteredData?: Observable<any[]>;\n tmp?: string[];\n\n ngOnInit() {\n  this.control.valueChanges.subscribe(x => {\n     console.log(' value changed')\n     console.log(x)\n     this.filteredData =  this.listData!.pipe(\n       map(items => items.filter(item => item.name.toLowerCase().indexOf(x.toLowerCase()) > -1))\n     )\n  })\n\n  this.filteredData?.subscribe( res =>\n     console.log(res)\n    )\n  this.listData?.subscribe( res =>\n   console.log(res)\n  )\n\n\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
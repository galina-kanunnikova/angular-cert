{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../quiz.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../quiz/quiz.component\";\nimport * as i5 from \"../autocomplete/autocomplete.component\";\nimport * as i6 from \"../category.pipe\";\nimport * as i7 from \"../subcategory.pipe\";\nfunction QuizMakerComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"app-autocomplete\", 2);\n    i0.ɵɵlistener(\"selectedOptionEvent\", function QuizMakerComponent_ng_container_4_Template_app_autocomplete_selectedOptionEvent_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.subcategoryOptionSelected($event));\n    });\n    i0.ɵɵpipe(2, \"subcategory\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"listData\", i0.ɵɵpipeBind2(2, 1, ctx_r0.categories$, ctx_r0.categorySelectedName));\n  }\n}\nfunction QuizMakerComponent_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r7.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_r7.name, \" \");\n  }\n}\nfunction QuizMakerComponent_ng_container_12_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const subcategory_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", subcategory_r10.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", subcategory_r10.name, \" \");\n  }\n}\nfunction QuizMakerComponent_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"select\", 12, 13);\n    i0.ɵɵlistener(\"ngModelChange\", function QuizMakerComponent_ng_container_12_Template_select_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.subcategorySelected = $event);\n    });\n    i0.ɵɵelementStart(3, \"option\");\n    i0.ɵɵtext(4, \"Select subcategory\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, QuizMakerComponent_ng_container_12_option_5_Template, 2, 2, \"option\", 6);\n    i0.ɵɵpipe(6, \"async\");\n    i0.ɵɵpipe(7, \"subcategory\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.subcategorySelected);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(6, 2, i0.ɵɵpipeBind2(7, 4, ctx_r3.categories$, ctx_r3.categorySelectedName)));\n  }\n}\nclass QuizMakerComponent {\n  constructor(quizService) {\n    this.quizService = quizService;\n    this.categories$ = this.quizService.getAllCategories();\n    //console.log(quizService.getAllCategories())\n  }\n\n  checkCategory(catId) {\n    this.categories$.subscribe(res => {\n      let selectedcat = res.find(cat => cat.id === Number(catId));\n      this.categorySelectedName = selectedcat.name.split(\":\")[0].toLowerCase();\n    });\n  }\n  categoryOptionSelected(name) {\n    this.categorySelectedName = name.toLowerCase();\n  }\n  subcategoryOptionSelected(name) {\n    this.subcategorySelected = name.toLowerCase();\n  }\n  createQuiz(difficulty) {\n    var id = \"0\";\n    if (this.subcategorySelected) {\n      id = this.subcategorySelected;\n    } else {\n      id = this.categorySelected;\n    }\n    this.quizService.difficultySelected = difficulty;\n    this.quizService.categorySelected = id;\n    this.questions$ = this.quizService.createQuiz(id, difficulty);\n  }\n}\nQuizMakerComponent.ɵfac = function QuizMakerComponent_Factory(t) {\n  return new (t || QuizMakerComponent)(i0.ɵɵdirectiveInject(i1.QuizService));\n};\nQuizMakerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuizMakerComponent,\n  selectors: [[\"app-quiz-maker\"]],\n  decls: 28,\n  vars: 14,\n  consts: [[1, \"row\"], [1, \"col-sm-11\"], [3, \"listData\", \"selectedOptionEvent\"], [4, \"ngIf\"], [\"id\", \"categorySelect\", 3, \"ngModel\", \"ngModelChange\"], [\"category\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"difficultySelect\"], [\"difficulty\", \"\"], [\"id\", \"createBtn\", 1, \"primary\", 3, \"click\"], [3, \"questions\"], [3, \"value\"], [\"id\", \"subcategorySelect\", 3, \"ngModel\", \"ngModelChange\"], [\"subcategory\", \"\"]],\n  template: function QuizMakerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r13 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"app-autocomplete\", 2);\n      i0.ɵɵlistener(\"selectedOptionEvent\", function QuizMakerComponent_Template_app_autocomplete_selectedOptionEvent_2_listener($event) {\n        return ctx.categoryOptionSelected($event);\n      });\n      i0.ɵɵpipe(3, \"category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, QuizMakerComponent_ng_container_4_Template, 3, 4, \"ng-container\", 3);\n      i0.ɵɵelementStart(5, \"select\", 4, 5);\n      i0.ɵɵlistener(\"ngModelChange\", function QuizMakerComponent_Template_select_ngModelChange_5_listener($event) {\n        return ctx.categorySelected = $event;\n      })(\"ngModelChange\", function QuizMakerComponent_Template_select_ngModelChange_5_listener($event) {\n        return ctx.checkCategory($event);\n      });\n      i0.ɵɵelementStart(7, \"option\");\n      i0.ɵɵtext(8, \"Select category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, QuizMakerComponent_option_9_Template, 2, 2, \"option\", 6);\n      i0.ɵɵpipe(10, \"async\");\n      i0.ɵɵpipe(11, \"category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, QuizMakerComponent_ng_container_12_Template, 8, 7, \"ng-container\", 3);\n      i0.ɵɵelementStart(13, \"select\", 7, 8)(15, \"option\");\n      i0.ɵɵtext(16, \"Select difficulty\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"option\");\n      i0.ɵɵtext(18, \"Easy\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"option\");\n      i0.ɵɵtext(20, \"Medium\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"option\");\n      i0.ɵɵtext(22, \"Hard\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function QuizMakerComponent_Template_button_click_23_listener() {\n        i0.ɵɵrestoreView(_r13);\n        const _r4 = i0.ɵɵreference(14);\n        return i0.ɵɵresetView(ctx.createQuiz(_r4.value));\n      });\n      i0.ɵɵtext(24, \"Create\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(25, \"div\", 0);\n      i0.ɵɵelement(26, \"app-quiz\", 10);\n      i0.ɵɵpipe(27, \"async\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"listData\", i0.ɵɵpipeBind1(3, 6, ctx.categories$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.categorySelectedName === \"entertainment\" || ctx.categorySelectedName === \"science\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.categorySelected);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(10, 8, i0.ɵɵpipeBind1(11, 10, ctx.categories$)));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.categorySelectedName === \"entertainment\" || ctx.categorySelectedName === \"science\");\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"questions\", i0.ɵɵpipeBind1(27, 12, ctx.questions$));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel, i4.QuizComponent, i5.AutocompleteComponent, i2.AsyncPipe, i6.CategoryPipe, i7.SubcategoryPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { QuizMakerComponent };","map":{"version":3,"mappings":"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","names":["i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵlistener","QuizMakerComponent_ng_container_4_Template_app_autocomplete_selectedOptionEvent_1_listener","$event","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","subcategoryOptionSelected","ɵɵelementEnd","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","ɵɵpipeBind2","ctx_r0","categories$","categorySelectedName","ɵɵtext","category_r7","id","ɵɵtextInterpolate1","name","subcategory_r10","QuizMakerComponent_ng_container_12_Template_select_ngModelChange_1_listener","_r12","ctx_r11","subcategorySelected","ɵɵtemplate","QuizMakerComponent_ng_container_12_option_5_Template","ctx_r3","ɵɵpipeBind1","QuizMakerComponent","constructor","quizService","getAllCategories","checkCategory","catId","subscribe","res","selectedcat","find","cat","Number","split","toLowerCase","categoryOptionSelected","createQuiz","difficulty","categorySelected","difficultySelected","questions$","ɵɵdirectiveInject","i1","QuizService","selectors","decls","vars","consts","template","QuizMakerComponent_Template","rf","ctx","QuizMakerComponent_Template_app_autocomplete_selectedOptionEvent_2_listener","QuizMakerComponent_ng_container_4_Template","QuizMakerComponent_Template_select_ngModelChange_5_listener","QuizMakerComponent_option_9_Template","QuizMakerComponent_ng_container_12_Template","QuizMakerComponent_Template_button_click_23_listener","_r13","_r4","ɵɵreference","value","ɵɵelement"],"sourceRoot":"","sources":["/Users/gkanunnikova/angular3/angular-cert/src/app/quiz-maker/quiz-maker.component.html","/Users/gkanunnikova/angular3/angular-cert/src/app/quiz-maker/quiz-maker.component.ts"],"sourcesContent":["<div class=\"row\">\r\n  <div class=\"col-sm-11\">\r\n\r\n    <app-autocomplete (selectedOptionEvent)=\"categoryOptionSelected($event)\" [listData]=\"categories$ | category\">\r\n    </app-autocomplete>\r\n\r\n    <ng-container *ngIf=\"categorySelectedName === 'entertainment' || categorySelectedName === 'science'\">\r\n      <app-autocomplete (selectedOptionEvent)=\"subcategoryOptionSelected($event)\" [listData]=\"categories$ | subcategory:categorySelectedName\">\r\n      </app-autocomplete>\r\n    </ng-container>\r\n    <!--\r\n    <select #categor id=\"categorySelec\" >\r\n      <option>Select category</option>\r\n      <option [value]=\"category.id\" *ngFor=\"let category of categories$ | async\">\r\n        {{category.name}}\r\n      </option>\r\n    </select>-->\r\n    <select #category id=\"categorySelect\" [(ngModel)]=\"categorySelected\" (ngModelChange)=\"checkCategory($event)\">\r\n      <option>Select category</option>\r\n      <option  [value]=\"category.id\"  *ngFor=\"let category of (categories$ | category) | async\">\r\n        {{category.name}}\r\n      </option>\r\n    </select>\r\n    <ng-container *ngIf=\"categorySelectedName === 'entertainment' || categorySelectedName === 'science'\">\r\n      <select #subcategory  [(ngModel)]=\"subcategorySelected\" id=\"subcategorySelect\">\r\n        <option>Select subcategory</option>\r\n        <option [value]=\"subcategory.id\" *ngFor=\"let subcategory of (categories$ | subcategory:categorySelectedName) | async\">\r\n          {{subcategory.name}}\r\n        </option>\r\n      </select>\r\n    </ng-container>\r\n    <select #difficulty id=\"difficultySelect\">\r\n      <option>Select difficulty</option>\r\n      <option>Easy</option>\r\n      <option>Medium</option>\r\n      <option>Hard</option>\r\n    </select>\r\n    <button class=\"primary\" id=\"createBtn\" (click)=\"createQuiz(difficulty.value)\">Create</button>\r\n  </div>\r\n\r\n</div>\r\n<div class=\"row\">\r\n   <app-quiz [questions]=\"questions$ | async\" ></app-quiz>\r\n</div>\r\n","import {Component} from '@angular/core';\r\nimport {Category, Difficulty, Question} from '../data.models';\r\nimport {Observable, map} from 'rxjs';\r\nimport {QuizService} from '../quiz.service';\r\n\r\n@Component({\r\n  selector: 'app-quiz-maker',\r\n  templateUrl: './quiz-maker.component.html',\r\n  styleUrls: ['./quiz-maker.component.css']\r\n})\r\nexport class QuizMakerComponent {\r\n\r\n  categorySelected: any;\r\n  subcategorySelected: any;\r\n  categorySelectedName: any;\r\n\r\n  categories$: Observable<Category[]>;\r\n  questions$!: Observable<Question[]>;\r\n\r\n  constructor(protected quizService: QuizService) {\r\n    this.categories$ = this.quizService.getAllCategories()\r\n    //console.log(quizService.getAllCategories())\r\n  }\r\n\r\n  checkCategory(catId: string): void {\r\n    this.categories$.subscribe(res => {\r\n       let selectedcat = res.find(cat => cat.id === Number(catId))\r\n       this.categorySelectedName = selectedcat!.name.split(\":\")[0].toLowerCase()\r\n       });\r\n    }\r\n\r\n  categoryOptionSelected(name: string): void {\r\n      this.categorySelectedName = name.toLowerCase();\r\n  }\r\n\r\n  subcategoryOptionSelected(name: string): void {\r\n        this.subcategorySelected = name.toLowerCase();\r\n    }\r\n\r\n  createQuiz(difficulty: string): void {\r\n   var id = \"0\"\r\n   if (this.subcategorySelected) {id = this.subcategorySelected}\r\n   else{\r\n   id = this.categorySelected\r\n   }\r\n   this.quizService.difficultySelected = difficulty\r\n   this.quizService.categorySelected = id\r\n   this.questions$ = this.quizService.createQuiz(id, difficulty as Difficulty);\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}